(set-logic UFLIRA)
(declare-fun B_15_presence () Bool)
(declare-fun A_14_presence () Bool)
(declare-fun Measure_7_presence () Bool)
(declare-fun Measure (Int Int) Bool)
(declare-fun Measure_6_presence () Bool)
(declare-fun D (Int) Bool)
(declare-fun Measure_8_presence () Bool)
(declare-fun D_13_presence () Bool)
(declare-fun A (Int) Bool)
(declare-fun C_13_presence () Bool)
(declare-fun C (Int) Bool)
(declare-fun B (Int) Bool)
(assert (let ((.def_0 (forall ((Measure_8_time Int)(Measure_8_m1 Int)) (let ((.def_0 (<= 0 Measure_8_time))) (let ((.def_1 (and .def_0 true))) (let ((.def_2 (=> Measure_8_presence .def_1))) (let ((.def_3 (Measure Measure_8_time Measure_8_m1))) (let ((.def_4 (not .def_3))) (let ((.def_5 (or .def_4 .def_2))) .def_5)))))))))(let ((.def_1 (forall ((D_13_time Int)) (let ((.def_0 (<= 0 D_13_time))) (let ((.def_1 (=> D_13_presence .def_0))) (let ((.def_2 (D D_13_time))) (let ((.def_3 (not .def_2))) (let ((.def_4 (or .def_3 .def_1))) .def_4))))))))(let ((.def_2 (forall ((C_13_time Int)) (let ((.def_0 (<= 0 C_13_time))) (let ((.def_1 (=> C_13_presence .def_0))) (let ((.def_2 (C C_13_time))) (let ((.def_3 (not .def_2))) (let ((.def_4 (or .def_3 .def_1))) .def_4))))))))(let ((.def_3 (forall ((B_15_time Int)) (let ((.def_0 (<= 0 B_15_time))) (let ((.def_1 (=> B_15_presence .def_0))) (let ((.def_2 (B B_15_time))) (let ((.def_3 (not .def_2))) (let ((.def_4 (or .def_3 .def_1))) .def_4))))))))(let ((.def_4 (forall ((A_14_time Int)) (let ((.def_0 (<= 0 A_14_time))) (let ((.def_1 (=> A_14_presence .def_0))) (let ((.def_2 (A A_14_time))) (let ((.def_3 (not .def_2))) (let ((.def_4 (or .def_3 .def_1))) .def_4))))))))(let ((.def_5 (exists ((t_D_9_time Int)) (let ((.def_0 (forall ((D_12_time Int)) (let ((.def_0 (<= D_12_time t_D_9_time))) (let ((.def_1 (D D_12_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_1 (D t_D_9_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_6 (exists ((t_D_8_time Int)) (let ((.def_0 (forall ((D_11_time Int)) (let ((.def_0 (<= t_D_8_time D_11_time))) (let ((.def_1 (D D_11_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_1 (D t_D_8_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_7 (and .def_6 .def_5))) (let ((.def_8 (forall ((D_10_time Int)) (let ((.def_0 (not true))) (let ((.def_1 (D D_10_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_9 (or .def_8 .def_7))) (let ((.def_10 (exists ((t_C_6_time Int)) (let ((.def_0 (forall ((C_12_time Int)) (let ((.def_0 (<= C_12_time t_C_6_time))) (let ((.def_1 (C C_12_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_1 (C t_C_6_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_11 (exists ((t_C_5_time Int)) (let ((.def_0 (forall ((C_11_time Int)) (let ((.def_0 (<= t_C_5_time C_11_time))) (let ((.def_1 (C C_11_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_1 (C t_C_5_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_12 (and .def_11 .def_10))) (let ((.def_13 (forall ((C_10_time Int)) (let ((.def_0 (not true))) (let ((.def_1 (C C_10_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_14 (or .def_13 .def_12))) (let ((.def_15 (exists ((t_B_10_time Int)) (let ((.def_0 (forall ((B_14_time Int)) (let ((.def_0 (<= B_14_time t_B_10_time))) (let ((.def_1 (B B_14_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_1 (B t_B_10_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_16 (exists ((t_B_9_time Int)) (let ((.def_0 (forall ((B_13_time Int)) (let ((.def_0 (<= t_B_9_time B_13_time))) (let ((.def_1 (B B_13_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_1 (B t_B_9_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_17 (and .def_16 .def_15))) (let ((.def_18 (forall ((B_12_time Int)) (let ((.def_0 (not true))) (let ((.def_1 (B B_12_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_19 (or .def_18 .def_17))) (let ((.def_20 (exists ((t_A_8_time Int)) (let ((.def_0 (forall ((A_13_time Int)) (let ((.def_0 (<= A_13_time t_A_8_time))) (let ((.def_1 (A A_13_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_1 (A t_A_8_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_21 (exists ((t_A_7_time Int)) (let ((.def_0 (forall ((A_12_time Int)) (let ((.def_0 (<= t_A_7_time A_12_time))) (let ((.def_1 (A A_12_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_1 (A t_A_7_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_22 (and .def_21 .def_20))) (let ((.def_23 (forall ((A_11_time Int)) (let ((.def_0 (not true))) (let ((.def_1 (A A_11_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_24 (or .def_23 .def_22))) (let ((.def_25 (forall ((Measure_6_time Int)(Measure_6_m1 Int)) (let ((.def_0 (forall ((Measure_7_time Int)(Measure_7_m1 Int)) (let ((.def_0 (= Measure_6_presence Measure_7_presence))) (let ((.def_1 (= Measure_6_m1 Measure_7_m1))) (let ((.def_2 (= Measure_6_time Measure_7_time))) (let ((.def_3 (and .def_2 .def_1 .def_0))) (let ((.def_4 (not .def_2))) (let ((.def_5 (or .def_4 .def_3))) (let ((.def_6 (Measure Measure_7_time Measure_7_m1))) (let ((.def_7 (not .def_6))) (let ((.def_8 (or .def_7 .def_5))) .def_8))))))))))))(let ((.def_1 (Measure Measure_6_time Measure_6_m1))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_26 (forall ((C_9_time Int)) (let ((.def_0 (exists ((t_Measure_13_time Int)(t_Measure_13_m1 Int)) (let ((.def_0 (exists ((t_Measure_14_time Int)(t_Measure_14_m1 Int)) (let ((.def_0 (exists ((t_B_8_time Int)) (let ((.def_0 (+ t_Measure_14_time 0))) (let ((.def_1 (<= .def_0 t_B_8_time))) (let ((.def_2 (+ t_Measure_14_time 5))) (let ((.def_3 (<= t_B_8_time .def_2))) (let ((.def_4 (and .def_3 .def_1))) (let ((.def_5 (B t_B_8_time))) (let ((.def_6 (and .def_5 .def_4))) .def_6))))))))))(let ((.def_1 (+ t_Measure_13_time 10))) (let ((.def_2 (= .def_1 t_Measure_14_time))) (let ((.def_3 (and .def_2 .def_0))) (let ((.def_4 (Measure t_Measure_14_time t_Measure_14_m1))) (let ((.def_5 (and .def_4 .def_3))) .def_5)))))))))(let ((.def_1 (exists ((t_A_6_time Int)) (let ((.def_0 (+ C_9_time 1))) (let ((.def_1 (<= .def_0 t_A_6_time))) (let ((.def_2 (+ C_9_time 10))) (let ((.def_3 (<= t_A_6_time .def_2))) (let ((.def_4 (and .def_3 .def_1))) (let ((.def_5 (A t_A_6_time))) (let ((.def_6 (and .def_5 .def_4))) .def_6))))))))))(let ((.def_2 (or .def_1 .def_0))) (let ((.def_3 (= C_9_time t_Measure_13_time))) (let ((.def_4 (and .def_3 .def_2))) (let ((.def_5 (Measure t_Measure_13_time t_Measure_13_m1))) (let ((.def_6 (and .def_5 .def_4))) .def_6))))))))))(let ((.def_1 (C C_9_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_27 (forall ((A_10_time Int)) (let ((.def_0 (exists ((t_Measure_11_time Int)(t_Measure_11_m1 Int)) (let ((.def_0 (exists ((t_Measure_12_time Int)(t_Measure_12_m1 Int)) (let ((.def_0 (exists ((t_D_7_time Int)) (let ((.def_0 (+ t_Measure_12_time 0))) (let ((.def_1 (<= .def_0 t_D_7_time))) (let ((.def_2 (+ t_Measure_12_time 5))) (let ((.def_3 (<= t_D_7_time .def_2))) (let ((.def_4 (and .def_3 .def_1))) (let ((.def_5 (D t_D_7_time))) (let ((.def_6 (and .def_5 .def_4))) .def_6))))))))))(let ((.def_1 (+ t_Measure_11_time 10))) (let ((.def_2 (= .def_1 t_Measure_12_time))) (let ((.def_3 (and .def_2 .def_0))) (let ((.def_4 (Measure t_Measure_12_time t_Measure_12_m1))) (let ((.def_5 (and .def_4 .def_3))) .def_5)))))))))(let ((.def_1 (exists ((t_B_7_time Int)) (let ((.def_0 (+ A_10_time 0))) (let ((.def_1 (<= .def_0 t_B_7_time))) (let ((.def_2 (+ A_10_time 10))) (let ((.def_3 (<= t_B_7_time .def_2))) (let ((.def_4 (and .def_3 .def_1))) (let ((.def_5 (B t_B_7_time))) (let ((.def_6 (and .def_5 .def_4))) .def_6))))))))))(let ((.def_2 (or .def_1 .def_0))) (let ((.def_3 (= A_10_time t_Measure_11_time))) (let ((.def_4 (and .def_3 .def_2))) (let ((.def_5 (Measure t_Measure_11_time t_Measure_11_m1))) (let ((.def_6 (and .def_5 .def_4))) .def_6))))))))))(let ((.def_1 (A A_10_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) .def_3)))))))(let ((.def_28 (exists ((t_B_6_time Int)) (let ((.def_0 (exists ((t_Measure_10_time Int)(t_Measure_10_m1 Int)) (let ((.def_0 (forall ((D_9_time Int)) (let ((.def_0 (+ t_B_6_time 0))) (let ((.def_1 (<= .def_0 D_9_time))) (let ((.def_2 (not .def_1))) (let ((.def_3 (+ t_B_6_time 1))) (let ((.def_4 (<= D_9_time .def_3))) (let ((.def_5 (not .def_4))) (let ((.def_6 (or .def_5 .def_2))) (let ((.def_7 (D D_9_time))) (let ((.def_8 (not .def_7))) (let ((.def_9 (or .def_8 .def_6))) .def_9)))))))))))))(let ((.def_1 (= t_B_6_time t_Measure_10_time))) (let ((.def_2 (and .def_1 .def_0))) (let ((.def_3 (Measure t_Measure_10_time t_Measure_10_m1))) (let ((.def_4 (and .def_3 .def_2))) .def_4))))))))(let ((.def_1 (B t_B_6_time))) (let ((.def_2 (and .def_1 .def_0))) .def_2))))))(let ((.def_29 (and .def_28 .def_27 .def_26 .def_25 .def_24 .def_19 .def_14 .def_9 .def_4 .def_3 .def_2 .def_1 .def_0))) .def_29)))))))))))))))))))))))))))))))
(check-sat)
